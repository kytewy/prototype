services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - POSTGRES_URI=postgresql+asyncpg://postgres:password@postgres:5432/hr_db
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
    depends_on:
      - neo4j
      - postgres
  frontend:
    build:
      context: ./frontend
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app
      - /app/node_modules # Use a named volume for node_modules
    environment:
      - NODE_ENV=development
      - ROLLUP_SKIP_NODEJS_NATIVE=1

  neo4j:
    image: neo4j:5.11.0
    ports:
      - '7474:7474'  # HTTP
      - '7687:7687'  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/import

  # PostgreSQL with pgvector extension for vector storage

  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: hr_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  postgres_data:
  neo4j_plugins:
