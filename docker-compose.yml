services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - LANCE_DB_PATH=/app/lance_db
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - lance_data:/app/lance_db
    depends_on:
      - neo4j
  frontend:
    build:
      context: ./frontend
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app
      - /app/node_modules # Use a named volume for node_modules
    environment:
      - NODE_ENV=development
      - ROLLUP_SKIP_NODEJS_NATIVE=1

  neo4j:
    image: neo4j:5.11.0
    ports:
      - '7474:7474'  # HTTP
      - '7687:7687'  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/import

  # LanceDB is now managed as a local volume mounted to the backend container
  # This simplifies the setup and avoids Docker image issues

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  lance_data:
  neo4j_plugins:
